// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SolCreditBanking.Data;

#nullable disable

namespace SolCreditBanking.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250119112754_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("SolCreditBanking.Models.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("accountnumber");

                    b.Property<decimal>("Balance")
                        .HasColumnType("TEXT")
                        .HasColumnName("balance");

                    b.Property<string>("CardNumber")
                        .HasColumnType("TEXT")
                        .HasColumnName("cardnumber");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("userid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("accounts");
                });

            modelBuilder.Entity("SolCreditBanking.Models.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AccountId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int?>("DestinationAccountId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TransactionType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("DestinationAccountId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("SolCreditBanking.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("createdat");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("firstname");

                    b.Property<bool>("IsBlocked")
                        .HasColumnType("INTEGER")
                        .HasColumnName("is_blocked");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("lastname");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("passwordhash");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("role");

                    b.HasKey("Id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("SolCreditBanking.Models.Account", b =>
                {
                    b.HasOne("SolCreditBanking.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SolCreditBanking.Models.Transaction", b =>
                {
                    b.HasOne("SolCreditBanking.Models.Account", "Account")
                        .WithMany("Transactions")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SolCreditBanking.Models.Account", "DestinationAccount")
                        .WithMany("TransactionsAsDestination")
                        .HasForeignKey("DestinationAccountId");

                    b.Navigation("Account");

                    b.Navigation("DestinationAccount");
                });

            modelBuilder.Entity("SolCreditBanking.Models.Account", b =>
                {
                    b.Navigation("Transactions");

                    b.Navigation("TransactionsAsDestination");
                });
#pragma warning restore 612, 618
        }
    }
}
